<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0511.0935                               -->
<workbook original-version='18.1' source-build='2021.1.2 (20211.21.0511.0935)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Prime(amazon_imdb_database)' inline='true' name='federated.1de3d2j0kgr9yr17aw71508jgatx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127.0.0.1' name='mysql.1ghgidl13ebxv818egekq0vec1vb'>
            <connection class='mysql' dbname='amazon_imdb_database' odbc-native-protocol='' one-time-sql='' port='3306' server='127.0.0.1' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.1ghgidl13ebxv818egekq0vec1vb' name='tv_series_mv' table='[tv_series_mv]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.1ghgidl13ebxv818egekq0vec1vb' name='tv_series_mv' table='[tv_series_mv]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[tv_series_mv]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tv_series_mv_A59B10DF72D4445AB87EBB74B800860D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name_of_the_show</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name_of_the_show]</local-name>
            <parent-name>[tv_series_mv]</parent-name>
            <remote-alias>Name_of_the_show</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tv_series_mv_A59B10DF72D4445AB87EBB74B800860D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year_of_release</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year_of_release]</local-name>
            <parent-name>[tv_series_mv]</parent-name>
            <remote-alias>Year_of_release</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tv_series_mv_A59B10DF72D4445AB87EBB74B800860D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No_of_seasons</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No_of_seasons]</local-name>
            <parent-name>[tv_series_mv]</parent-name>
            <remote-alias>No_of_seasons</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tv_series_mv_A59B10DF72D4445AB87EBB74B800860D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Language</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Language]</local-name>
            <parent-name>[tv_series_mv]</parent-name>
            <remote-alias>Language</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tv_series_mv_A59B10DF72D4445AB87EBB74B800860D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age_of_viewers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age_of_viewers]</local-name>
            <parent-name>[tv_series_mv]</parent-name>
            <remote-alias>Age_of_viewers</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tv_series_mv_A59B10DF72D4445AB87EBB74B800860D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IMDb_rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[IMDb_rating]</local-name>
            <parent-name>[tv_series_mv]</parent-name>
            <remote-alias>IMDb_rating</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tv_series_mv_A59B10DF72D4445AB87EBB74B800860D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GenrePivot</remote-name>
            <remote-type>130</remote-type>
            <local-name>[GenrePivot]</local-name>
            <parent-name>[tv_series_mv]</parent-name>
            <remote-alias>GenrePivot</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tv_series_mv_A59B10DF72D4445AB87EBB74B800860D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Genre</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Genre]</local-name>
            <parent-name>[tv_series_mv]</parent-name>
            <remote-alias>Genre</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tv_series_mv_A59B10DF72D4445AB87EBB74B800860D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Age of viewers' datatype='string' name='[Age_of_viewers]' role='dimension' type='nominal' />
      <column caption='Genre Pivot' datatype='string' name='[GenrePivot]' role='dimension' type='nominal' />
      <column caption='Genre' datatype='string' name='[Genre]' role='dimension' type='nominal' />
      <column caption='IMDb rating' datatype='real' name='[IMDb_rating]' role='measure' type='quantitative' />
      <column caption='Language' datatype='string' name='[Language]' role='dimension' type='nominal' />
      <column caption='Title' datatype='string' name='[Name_of_the_show]' role='dimension' type='nominal' />
      <column caption='No of seasons' datatype='integer' name='[No_of_seasons]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year of release' datatype='integer' name='[Year_of_release]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='tv_series_mv' datatype='table' name='[__tableau_internal_object_id__].[tv_series_mv_A59B10DF72D4445AB87EBB74B800860D]' role='measure' type='quantitative' />
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column-instance column='[Genre]' derivation='Attribute' name='[attr:Genre:nk]' pivot='key' type='nominal' />
      <column-instance column='[No_of_seasons]' derivation='Attribute' name='[attr:No_of_seasons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[IMDb_rating]' derivation='Avg' name='[avg:IMDb_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No_of_seasons]' derivation='Avg' name='[avg:No_of_seasons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[IMDb_rating]' derivation='Count' name='[cnt:IMDb_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No_of_seasons]' derivation='Count' name='[cnt:No_of_seasons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age_of_viewers]' derivation='None' name='[none:Age_of_viewers:nk]' pivot='key' type='nominal' />
      <column-instance column='[Genre]' derivation='None' name='[none:Genre:nk]' pivot='key' type='nominal' />
      <column-instance column='[IMDb_rating]' derivation='None' name='[none:IMDb_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Language]' derivation='None' name='[none:Language:nk]' pivot='key' type='nominal' />
      <column-instance column='[No_of_seasons]' derivation='None' name='[none:No_of_seasons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[IMDb_rating]' derivation='Sum' name='[sum:IMDb_rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No_of_seasons]' derivation='Sum' name='[sum:No_of_seasons:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1de3d2j0kgr9yr17aw71508jgatx].[__tableau_internal_object_id__].[cnt:netflix_titles_1BF7AF71089C4006AC7F0D0ACAA17DEE:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1de3d2j0kgr9yr17aw71508jgatx].[cnt:IMDb_rating:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:IMDb_rating:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1de3d2j0kgr9yr17aw71508jgatx].[sum:IMDb_rating:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1de3d2j0kgr9yr17aw71508jgatx].[sum:duration_season:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1de3d2j0kgr9yr17aw71508jgatx].[sum:index (prime_imdb_final):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1de3d2j0kgr9yr17aw71508jgatx].[sum:duration_min:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1de3d2j0kgr9yr17aw71508jgatx].[sum:index:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1de3d2j0kgr9yr17aw71508jgatx].[__tableau_internal_object_id__].[cnt:prime_imdb_final_A9D9BB01936E437BB8DAA4A05335AE59:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1de3d2j0kgr9yr17aw71508jgatx].[attr:No_of_seasons:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:No_of_seasons:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1de3d2j0kgr9yr17aw71508jgatx].[cnt:No_of_seasons:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:No_of_seasons:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1de3d2j0kgr9yr17aw71508jgatx].[sum:No_of_seasons:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Genre:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Drama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arts&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kids&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Entertainment&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comedy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Action&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sports&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Culture&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LGBTQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romance&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suspense&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fantasy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Documentary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adventure&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sci-fi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Horror&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Animation&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Language:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Nederlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Deutsch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hindi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suomi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italiano&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;English&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japanese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Telugu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Serbian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marathi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;French&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spanish&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hebrew&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Age_of_viewers:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;7+&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;All&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;18+&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;16+&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;13+&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_2595480820875956224:ok]' type='palette'>
            <map to='#499894'>
              <bucket>32.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>13.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>16.0</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>9.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>75.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>11.0</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>65.0</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>66.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>17.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>34.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>43.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>74.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>23.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>162.0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>7.0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>192.0</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6.0</bucket>
            </map>
            <map to='#edc948'>
              <bucket>8.0</bucket>
            </map>
            <map to='#edc948'>
              <bucket>15.0</bucket>
            </map>
            <map to='#edc948'>
              <bucket>19.0</bucket>
            </map>
            <map to='#edc948'>
              <bucket>40.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>28.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3.0</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>12.0</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>26.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Genre:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Drama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arts&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kids&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Entertainment&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comedy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Action&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sports&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Culture&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LGBTQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romance&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suspense&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fantasy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Documentary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adventure&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sci-fi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Horror&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Animation&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='tv_series_mv' id='tv_series_mv_A59B10DF72D4445AB87EBB74B800860D'>
            <properties context=''>
              <relation connection='mysql.1ghgidl13ebxv818egekq0vec1vb' name='tv_series_mv' table='[tv_series_mv]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Netflix (amazon_imdb_database)' inline='true' name='federated.0msyu3s0jagk7r176j3p30pojhb6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127.0.0.1' name='mysql.0hqx83y090ssn8108zocg01vk6cn'>
            <connection class='mysql' dbname='amazon_imdb_database' odbc-native-protocol='' one-time-sql='' port='3306' server='127.0.0.1' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.0hqx83y090ssn8108zocg01vk6cn' name='netflix_titles_mv' table='[netflix_titles_mv]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.0hqx83y090ssn8108zocg01vk6cn' name='netflix_titles_mv' table='[netflix_titles_mv]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[netflix_titles_mv]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[netflix_titles_mv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[netflix_titles_mv]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>director</remote-name>
            <remote-type>130</remote-type>
            <local-name>[director]</local-name>
            <parent-name>[netflix_titles_mv]</parent-name>
            <remote-alias>director</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cast</remote-name>
            <remote-type>130</remote-type>
            <local-name>[cast]</local-name>
            <parent-name>[netflix_titles_mv]</parent-name>
            <remote-alias>cast</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_added</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date_added]</local-name>
            <parent-name>[netflix_titles_mv]</parent-name>
            <remote-alias>date_added</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[release_year]</local-name>
            <parent-name>[netflix_titles_mv]</parent-name>
            <remote-alias>release_year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[netflix_titles_mv]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_min</remote-name>
            <remote-type>3</remote-type>
            <local-name>[duration_min]</local-name>
            <parent-name>[netflix_titles_mv]</parent-name>
            <remote-alias>duration_min</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_season</remote-name>
            <remote-type>3</remote-type>
            <local-name>[duration_season]</local-name>
            <parent-name>[netflix_titles_mv]</parent-name>
            <remote-alias>duration_season</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listed_in</remote-name>
            <remote-type>130</remote-type>
            <local-name>[listed_in]</local-name>
            <parent-name>[netflix_titles_mv]</parent-name>
            <remote-alias>listed_in</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[netflix_titles_mv]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>genre_pivot</remote-name>
            <remote-type>130</remote-type>
            <local-name>[genre_pivot]</local-name>
            <parent-name>[netflix_titles_mv]</parent-name>
            <remote-alias>genre_pivot</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>genre</remote-name>
            <remote-type>130</remote-type>
            <local-name>[genre]</local-name>
            <parent-name>[netflix_titles_mv]</parent-name>
            <remote-alias>genre</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_pivot</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_pivot]</local-name>
            <parent-name>[netflix_titles_mv]</parent-name>
            <remote-alias>country_pivot</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[netflix_titles_mv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='netflix_titles_mv' datatype='table' name='[__tableau_internal_object_id__].[netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47]' role='measure' type='quantitative' />
      <column caption='Cast' datatype='string' name='[cast]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Pivot' datatype='string' name='[country_pivot]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date Added' datatype='datetime' name='[date_added]' role='dimension' type='ordinal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
      <column caption='Duration Min' datatype='integer' name='[duration_min]' role='measure' type='quantitative' />
      <column caption='Duration Season' datatype='integer' name='[duration_season]' role='measure' type='quantitative' />
      <column caption='Genre' datatype='string' name='[genre]' role='dimension' type='nominal' />
      <column caption='Genre Pivot' datatype='string' name='[genre_pivot]' role='dimension' type='nominal' />
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column caption='Listed In' datatype='string' name='[listed_in]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
      <column caption='Release Year' datatype='integer' name='[release_year]' role='dimension' type='quantitative' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='netflix_titles_mv' id='netflix_titles_mv_E5F20BB907CE4A8DA85A90195A3B6D47'>
            <properties context=''>
              <relation connection='mysql.0hqx83y090ssn8108zocg01vk6cn' name='netflix_titles_mv' table='[netflix_titles_mv]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Age of the viewers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Prime(amazon_imdb_database)' name='federated.1de3d2j0kgr9yr17aw71508jgatx' />
          </datasources>
          <datasource-dependencies datasource='federated.1de3d2j0kgr9yr17aw71508jgatx'>
            <column caption='Age of viewers' datatype='string' name='[Age_of_viewers]' role='dimension' type='nominal' />
            <column caption='COUNT([Title])/3' datatype='real' name='[Calculation_1795247462325129221]' role='measure' type='quantitative' user:unnamed='Sheet 8'>
              <calculation class='tableau' formula='COUNT([Name_of_the_show])/3' />
            </column>
            <column caption='IMDb rating' datatype='real' name='[IMDb_rating]' role='measure' type='quantitative' />
            <column caption='Title' datatype='string' name='[Name_of_the_show]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Year of release' datatype='integer' name='[Year_of_release]' role='dimension' type='quantitative' />
            <column-instance column='[IMDb_rating]' derivation='Avg' name='[avg:IMDb_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age_of_viewers]' derivation='None' name='[none:Age_of_viewers:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year_of_release]' derivation='None' name='[none:Year_of_release:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1795247462325129221]' derivation='User' name='[usr:Calculation_1795247462325129221:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' included-values='in-range'>
            <min>1926</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1de3d2j0kgr9yr17aw71508jgatx].[usr:Calculation_1795247462325129221:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1de3d2j0kgr9yr17aw71508jgatx].[usr:Calculation_1795247462325129221:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]' />
              <wedge-size column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[usr:Calculation_1795247462325129221:qk]' />
              <lod column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]' />
              <text column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{61590FFE-F107-4307-BD4C-6141CFF5E4A6}' />
    </worksheet>
    <worksheet name='Genre'>
      <table>
        <view>
          <datasources>
            <datasource caption='Prime(amazon_imdb_database)' name='federated.1de3d2j0kgr9yr17aw71508jgatx' />
          </datasources>
          <datasource-dependencies datasource='federated.1de3d2j0kgr9yr17aw71508jgatx'>
            <column caption='Age of viewers' datatype='string' name='[Age_of_viewers]' role='dimension' type='nominal' />
            <column caption='Genre' datatype='string' name='[Genre]' role='dimension' type='nominal' />
            <column caption='IMDb rating' datatype='real' name='[IMDb_rating]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year of release' datatype='integer' name='[Year_of_release]' role='dimension' type='quantitative' />
            <column-instance column='[IMDb_rating]' derivation='Avg' name='[avg:IMDb_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Genre]' derivation='Count' name='[cnt:Genre:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age_of_viewers]' derivation='None' name='[none:Age_of_viewers:nk]' pivot='key' type='nominal' />
            <column-instance column='[Genre]' derivation='None' name='[none:Genre:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year_of_release]' derivation='None' name='[none:Year_of_release:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Genre:nk]' />
              <groupfilter function='member' level='[none:Genre:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' included-values='in-range'>
            <min>1926</min>
            <max>2020</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1de3d2j0kgr9yr17aw71508jgatx].[cnt:Genre:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]' member-value='&quot;16+&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]</column>
            <column>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1de3d2j0kgr9yr17aw71508jgatx].[cnt:Genre:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]' />
              <tooltip column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]</rows>
        <cols>([federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk] * [federated.1de3d2j0kgr9yr17aw71508jgatx].[cnt:Genre:qk])</cols>
      </table>
      <simple-id uuid='{E7DD2D62-3E70-46F2-8515-03C62D6A8295}' />
    </worksheet>
    <worksheet name='Genre per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Prime(amazon_imdb_database)' name='federated.1de3d2j0kgr9yr17aw71508jgatx' />
          </datasources>
          <datasource-dependencies datasource='federated.1de3d2j0kgr9yr17aw71508jgatx'>
            <column caption='Genre' datatype='string' name='[Genre]' role='dimension' type='nominal' />
            <column caption='Title' datatype='string' name='[Name_of_the_show]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Year of release' datatype='integer' name='[Year_of_release]' role='dimension' type='quantitative' />
            <column-instance column='[Name_of_the_show]' derivation='Count' name='[cnt:Name_of_the_show:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Genre]' derivation='None' name='[none:Genre:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year_of_release]' derivation='None' name='[none:Year_of_release:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Genre:nk]' />
              <groupfilter function='member' level='[none:Genre:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1de3d2j0kgr9yr17aw71508jgatx].[cnt:Name_of_the_show:qk]</rows>
        <cols>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]</cols>
      </table>
      <simple-id uuid='{91328C92-7508-4AF3-8FF4-1370B7445A65}' />
    </worksheet>
    <worksheet name='Highest Ratings excl. Netflix'>
      <table>
        <view>
          <datasources>
            <datasource caption='Prime(amazon_imdb_database)' name='federated.1de3d2j0kgr9yr17aw71508jgatx' />
            <datasource caption='Netflix (amazon_imdb_database)' name='federated.0msyu3s0jagk7r176j3p30pojhb6' />
          </datasources>
          <datasource-dependencies datasource='federated.0msyu3s0jagk7r176j3p30pojhb6'>
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1de3d2j0kgr9yr17aw71508jgatx'>
            <column caption='Age of viewers' datatype='string' name='[Age_of_viewers]' role='dimension' type='nominal' />
            <column caption='Genre Pivot' datatype='string' name='[GenrePivot]' role='dimension' type='nominal' />
            <column caption='Genre' datatype='string' name='[Genre]' role='dimension' type='nominal' />
            <column caption='IMDb rating' datatype='real' name='[IMDb_rating]' role='measure' type='quantitative' />
            <column caption='Language' datatype='string' name='[Language]' role='dimension' type='nominal' />
            <column caption='Title' datatype='string' name='[Name_of_the_show]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Year of release' datatype='integer' name='[Year_of_release]' role='dimension' type='quantitative' />
            <column-instance column='[IMDb_rating]' derivation='Avg' name='[avg:IMDb_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age_of_viewers]' derivation='None' name='[none:Age_of_viewers:nk]' pivot='key' type='nominal' />
            <column-instance column='[Genre]' derivation='None' name='[none:Genre:nk]' pivot='key' type='nominal' />
            <column-instance column='[GenrePivot]' derivation='None' name='[none:GenrePivot:nk]' pivot='key' type='nominal' />
            <column-instance column='[Language]' derivation='None' name='[none:Language:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name_of_the_show]' derivation='None' name='[none:Name_of_the_show:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year_of_release]' derivation='None' name='[none:Year_of_release:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0msyu3s0jagk7r176j3p30pojhb6].[none:title:nk]'>
            <groupfilter function='member' level='[none:title:nk]' member='%null%' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;13+&quot;' function='range' level='[none:Age_of_viewers:nk]' to='&quot;18+&quot;' />
              <groupfilter function='member' level='[none:Age_of_viewers:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:GenrePivot:nk]'>
            <groupfilter function='member' level='[none:GenrePivot:nk]' member='&quot;Genre0&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Name_of_the_show:nk]'>
            <groupfilter expression='AVG([IMDb_rating]) &gt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter from='&quot;\#IMomSoHard Live&quot;' function='range' level='[none:Name_of_the_show:nk]' to='&quot;Zoe Coombs Marr: Bossy Bottom&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Name_of_the_show:nk]' direction='DESC' using='[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]' />
          <filter class='quantitative' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' included-values='in-range'>
            <min>2010</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.0msyu3s0jagk7r176j3p30pojhb6].[none:title:nk]</column>
            <column>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:GenrePivot:nk]</column>
            <column>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Name_of_the_show:nk]</column>
            <column>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]</column>
            <column>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]' />
              <lod column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' />
              <lod column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Language:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Name_of_the_show:nk]</rows>
        <cols>[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]</cols>
      </table>
      <simple-id uuid='{8F12F0C3-08B8-49B1-BD23-D728860F6615}' />
    </worksheet>
    <worksheet name='Language'>
      <table>
        <view>
          <datasources>
            <datasource caption='Prime(amazon_imdb_database)' name='federated.1de3d2j0kgr9yr17aw71508jgatx' />
          </datasources>
          <datasource-dependencies datasource='federated.1de3d2j0kgr9yr17aw71508jgatx'>
            <column caption='Age of viewers' datatype='string' name='[Age_of_viewers]' role='dimension' type='nominal' />
            <column caption='IMDb rating' datatype='real' name='[IMDb_rating]' role='measure' type='quantitative' />
            <column caption='Language' datatype='string' name='[Language]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Year of release' datatype='integer' name='[Year_of_release]' role='dimension' type='quantitative' />
            <column-instance column='[IMDb_rating]' derivation='Avg' name='[avg:IMDb_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Language]' derivation='Count' name='[cnt:Language:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age_of_viewers]' derivation='None' name='[none:Age_of_viewers:nk]' pivot='key' type='nominal' />
            <column-instance column='[Language]' derivation='None' name='[none:Language:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year_of_release]' derivation='None' name='[none:Year_of_release:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;13+&quot;' function='range' level='[none:Age_of_viewers:nk]' to='&quot;18+&quot;' />
              <groupfilter function='member' level='[none:Age_of_viewers:nk]' member='&quot;All&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' included-values='in-range'>
            <min>2008</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]</column>
            <column>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1de3d2j0kgr9yr17aw71508jgatx].[cnt:Language:qk]' palette='brown_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1de3d2j0kgr9yr17aw71508jgatx].[cnt:Language:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[cnt:Language:qk]' />
              <color column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[cnt:Language:qk]' />
              <text column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Language:nk]' />
              <text column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{106791B2-739D-4A72-88C3-FDE778656B86}' />
    </worksheet>
    <worksheet name='Language per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Prime(amazon_imdb_database)' name='federated.1de3d2j0kgr9yr17aw71508jgatx' />
          </datasources>
          <datasource-dependencies datasource='federated.1de3d2j0kgr9yr17aw71508jgatx'>
            <column caption='Genre' datatype='string' name='[Genre]' role='dimension' type='nominal' />
            <column caption='Language' datatype='string' name='[Language]' role='dimension' type='nominal' />
            <column caption='Title' datatype='string' name='[Name_of_the_show]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Year of release' datatype='integer' name='[Year_of_release]' role='dimension' type='quantitative' />
            <column-instance column='[Name_of_the_show]' derivation='Count' name='[cnt:Name_of_the_show:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Genre]' derivation='None' name='[none:Genre:nk]' pivot='key' type='nominal' />
            <column-instance column='[Language]' derivation='None' name='[none:Language:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year_of_release]' derivation='None' name='[none:Year_of_release:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Genre:nk]' />
              <groupfilter function='member' level='[none:Genre:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Language:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1de3d2j0kgr9yr17aw71508jgatx].[cnt:Name_of_the_show:qk]</rows>
        <cols>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]</cols>
      </table>
      <simple-id uuid='{7048ADDC-592C-4733-9AF3-A9B99AAFD74A}' />
    </worksheet>
    <worksheet name='Lowest Ratings incl. Netflix'>
      <table>
        <view>
          <datasources>
            <datasource caption='Prime(amazon_imdb_database)' name='federated.1de3d2j0kgr9yr17aw71508jgatx' />
            <datasource caption='Netflix (amazon_imdb_database)' name='federated.0msyu3s0jagk7r176j3p30pojhb6' />
          </datasources>
          <datasource-dependencies datasource='federated.0msyu3s0jagk7r176j3p30pojhb6'>
            <column caption='Genre' datatype='string' name='[genre]' role='dimension' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1de3d2j0kgr9yr17aw71508jgatx'>
            <column caption='Genre Pivot' datatype='string' name='[GenrePivot]' role='dimension' type='nominal' />
            <column caption='Genre' datatype='string' name='[Genre]' role='dimension' type='nominal' />
            <column caption='IMDb rating' datatype='real' name='[IMDb_rating]' role='measure' type='quantitative' />
            <column caption='Title' datatype='string' name='[Name_of_the_show]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Year of release' datatype='integer' name='[Year_of_release]' role='dimension' type='quantitative' />
            <column-instance column='[IMDb_rating]' derivation='Avg' name='[avg:IMDb_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Genre]' derivation='None' name='[none:Genre:nk]' pivot='key' type='nominal' />
            <column-instance column='[GenrePivot]' derivation='None' name='[none:GenrePivot:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name_of_the_show]' derivation='None' name='[none:Name_of_the_show:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year_of_release]' derivation='None' name='[none:Year_of_release:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0msyu3s0jagk7r176j3p30pojhb6].[none:title:nk]'>
            <groupfilter from='&quot;¡Ay, mi madre!&quot;' function='range' level='[none:title:nk]' to='&quot;海的儿子&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:GenrePivot:nk]'>
            <groupfilter function='member' level='[none:GenrePivot:nk]' member='&quot;Genre0&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Name_of_the_show:nk]'>
            <groupfilter expression='AVG([IMDb_rating]) &gt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Name_of_the_show:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' included-values='in-range'>
            <min>1926</min>
            <max>2020</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Name_of_the_show:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Name_of_the_show:nk]</column>
            <column>[federated.0msyu3s0jagk7r176j3p30pojhb6].[none:title:nk]</column>
            <column>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:GenrePivot:nk]</column>
            <column>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Name_of_the_show:nk]</rows>
        <cols>[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]</cols>
        <join-lod-exclude-overrides>
          <column>[federated.0msyu3s0jagk7r176j3p30pojhb6].[genre]</column>
        </join-lod-exclude-overrides>
      </table>
      <simple-id uuid='{61008F5E-7C5B-41CC-8BF7-BD16E78314EE}' />
    </worksheet>
    <worksheet name='Netflix Rating'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix (amazon_imdb_database)' name='federated.0msyu3s0jagk7r176j3p30pojhb6' />
          </datasources>
          <datasource-dependencies datasource='federated.0msyu3s0jagk7r176j3p30pojhb6'>
            <column caption='COUNT([Title])/11' datatype='real' name='[Calculation_1795247462404821005]' role='measure' type='quantitative' user:unnamed='Sheet 9'>
              <calculation class='tableau' formula='COUNT([title])/11' />
            </column>
            <column-instance column='[title]' derivation='Count' name='[cnt:title:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1795247462404821005]' derivation='User' name='[usr:Calculation_1795247462404821005:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0msyu3s0jagk7r176j3p30pojhb6].[none:rating:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;TV-Y7&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;TV-Y7-FV&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0msyu3s0jagk7r176j3p30pojhb6].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;TV Show&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0msyu3s0jagk7r176j3p30pojhb6].[none:rating:nk]</column>
            <column>[federated.0msyu3s0jagk7r176j3p30pojhb6].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0msyu3s0jagk7r176j3p30pojhb6].[usr:Calculation_1795247462404821005:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0msyu3s0jagk7r176j3p30pojhb6].[none:rating:nk]</rows>
        <cols>[federated.0msyu3s0jagk7r176j3p30pojhb6].[cnt:title:qk]</cols>
      </table>
      <simple-id uuid='{520111E1-6819-4524-96AE-E33C4E7B109A}' />
    </worksheet>
    <worksheet name='No seasons'>
      <table>
        <view>
          <datasources>
            <datasource caption='Prime(amazon_imdb_database)' name='federated.1de3d2j0kgr9yr17aw71508jgatx' />
          </datasources>
          <datasource-dependencies datasource='federated.1de3d2j0kgr9yr17aw71508jgatx'>
            <column caption='COUNT([Title])/3' datatype='real' name='[Calculation_2595480820875956224]' role='measure' type='quantitative' user:unnamed='No seasons'>
              <calculation class='tableau' formula='COUNT([Name_of_the_show])/3' />
            </column>
            <column caption='IMDb rating' datatype='real' name='[IMDb_rating]' role='measure' type='quantitative' />
            <column caption='Title' datatype='string' name='[Name_of_the_show]' role='dimension' type='nominal' />
            <column caption='No of seasons' datatype='integer' name='[No_of_seasons]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year of release' datatype='integer' name='[Year_of_release]' role='dimension' type='quantitative' />
            <column-instance column='[IMDb_rating]' derivation='Avg' name='[avg:IMDb_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No_of_seasons]' derivation='None' name='[none:No_of_seasons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year_of_release]' derivation='None' name='[none:Year_of_release:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2595480820875956224]' derivation='User' name='[usr:Calculation_2595480820875956224:ok]' pivot='key' type='ordinal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[usr:Calculation_2595480820875956224:ok]' type='palette'>
                  <map to='#499894'>
                    <bucket>32.0</bucket>
                  </map>
                  <map to='#4e79a7'>
                    <bucket>1.0</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>5.0</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>13.0</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>16.0</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>9.0</bucket>
                  </map>
                  <map to='#86bcb6'>
                    <bucket>75.0</bucket>
                  </map>
                  <map to='#8cd17d'>
                    <bucket>11.0</bucket>
                  </map>
                  <map to='#9c755f'>
                    <bucket>65.0</bucket>
                  </map>
                  <map to='#9c755f'>
                    <bucket>66.0</bucket>
                  </map>
                  <map to='#a0cbe8'>
                    <bucket>2.0</bucket>
                  </map>
                  <map to='#b07aa1'>
                    <bucket>10.0</bucket>
                  </map>
                  <map to='#b07aa1'>
                    <bucket>17.0</bucket>
                  </map>
                  <map to='#b07aa1'>
                    <bucket>34.0</bucket>
                  </map>
                  <map to='#b07aa1'>
                    <bucket>43.0</bucket>
                  </map>
                  <map to='#b07aa1'>
                    <bucket>74.0</bucket>
                  </map>
                  <map to='#b6992d'>
                    <bucket>23.0</bucket>
                  </map>
                  <map to='#bab0ac'>
                    <bucket>162.0</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>7.0</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>192.0</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>6.0</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>8.0</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>15.0</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>19.0</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>40.0</bucket>
                  </map>
                  <map to='#f1ce63'>
                    <bucket>28.0</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>3.0</bucket>
                  </map>
                  <map to='#ff9da7'>
                    <bucket>12.0</bucket>
                  </map>
                  <map to='#ff9da7'>
                    <bucket>26.0</bucket>
                  </map>
                  <map to='#ffbe7d'>
                    <bucket>4.0</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' included-values='in-range'>
            <min>1926</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[usr:Calculation_2595480820875956224:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]</rows>
        <cols>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:No_of_seasons:qk]</cols>
      </table>
      <simple-id uuid='{5ACDDC36-8456-448B-AB34-F7E39696DC39}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Amazon Prime TV Shows' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Amazon Prime TV Shows</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-description'>
          <format attr='border-width' value='0' />
          <format attr='border-style' value='none' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='923' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='vert' removable='false' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5125' id='8' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92875' id='1' param='vert' removable='false' w='98400' x='800' y='6125'>
              <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' fixed-size='104' h='13000' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98400' x='800' y='6125' />
              <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='79875' id='5' paired-zone-id='4' removable='false' w='98400' x='800' y='19125'>
                <flipboard active-id='13' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='According to the New York Times, Amazon Prime Video is one of Netflix&apos;s main competitors. ' captured-sheet='Amazon Prime Video logo' id='13' />
                    <story-point caption='The content present in Amazon Prime is mostly targeted for people over 16 years old. The smallest presence is for 7+, which means that the competitor is not offering much content for that category. If Netflix would like to enter this new age target, it will be necessary to analyze another platform like Disney+, but until now, we will not consider 7+ in the further analysis.' captured-sheet='Age of the viewers' id='8'>
                      <capturedDeltas>
                        <worksheet name='Age of the viewers'>
                          <filter class='quantitative' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' included-values='in-range'>
                            <min>1926</min>
                            <max>2020</max>
                          </filter>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Drama has the highest presence in all of the ages, except for &quot;All&quot; where Comedy is higher. In general it is possible to infere that Drama has more presence and also decent rating.' captured-sheet='Genre' id='6'>
                      <capturedDeltas>
                        <worksheet name='Genre'>
                          <filter class='categorical' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]'>
                            <groupfilter function='level-members' level='[none:Age_of_viewers:nk]' user:ui-exclude='true' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
                          </filter>
                          <shelf-sort-deltas>
                            <shelf-sorts>
                              <shelf-sort-v2 dimension-to-sort='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1de3d2j0kgr9yr17aw71508jgatx].[cnt:Genre:qk]' shelf='rows'>
                                <sort-filter-info>
                                  <sort-filter level-name='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]' member-value='&quot;13+&quot;' />
                                </sort-filter-info>
                              </shelf-sort-v2>
                            </shelf-sorts>
                          </shelf-sort-deltas>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='In the last 5 years, the trend of genre continues with Drama and Comedy.Although the presence of comedy has increased compared to the previous analysis, Drama&apos;s IMDb rating is higher. Therefore, we recomend Netflix to produce Drama TV Series. ' captured-sheet='Genre' id='7'>
                      <capturedDeltas>
                        <worksheet name='Genre'>
                          <filter class='categorical' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]'>
                            <groupfilter function='level-members' level='[none:Age_of_viewers:nk]' user:ui-exclude='true' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
                          </filter>
                          <filter class='quantitative' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' included-values='in-range'>
                            <min>2015</min>
                            <max>2020</max>
                          </filter>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Prime&apos;s content is mostly in English, but also Hindi, Japanese and Spanish. ' captured-sheet='Language' id='10'>
                      <capturedDeltas>
                        <worksheet name='Language'>
                          <filter class='quantitative' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' included-values='in-range'>
                            <min>1926</min>
                            <max>2020</max>
                          </filter>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Over the last 5 years, Prime has continued to deploy TV series mostly in English, but also Hindi and Japanese. This time Spanish is not present, instead we have Italian, however the IMDb rating is 1.8 vs Spanish with 6.6 average rating. Therefore the recommendation will be to continue deploying TV Series in English and if possible include Hindi, Japanese and Spanish, which also have good IMDb rating (higher than 6)' captured-sheet='Language' id='11'>
                      <capturedDeltas>
                        <worksheet name='Language'>
                          <filter class='quantitative' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' included-values='in-range'>
                            <min>2015</min>
                            <max>2020</max>
                          </filter>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='When a TV Series has more than 3 seasons, the average IMDb rating is higher than 7.  The lowest IMDb rating is visible when a TV series has just  1 or 2 seasons. Therefore the recommendation will be to have TV Series with more than 3 seasons.' captured-sheet='No seasons' id='12'>
                      <capturedDeltas>
                        <worksheet name='No seasons'>
                          <filter class='quantitative' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' included-values='all' />
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Now, lets analyze which TV Series are not present in Netflix and are popular in Amazon Prime. We recommend to add the Top 3 TV Series of each &quot;Age of viewers&quot; category' captured-sheet='Highest Ratings excl. Netflix' id='1'>
                      <capturedDeltas>
                        <worksheet name='Highest Ratings excl. Netflix'>
                          <filter class='categorical' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]'>
                            <groupfilter function='level-members' level='[none:Age_of_viewers:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                          </filter>
                          <filter class='quantitative' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' included-values='in-range'>
                            <min>1926</min>
                            <max>2020</max>
                          </filter>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='For the last 5 years, these are the highest rated Prime TV shows. We suggest to include the Top 3 of each &quot;Age of viewers&quot; category. ' captured-sheet='Highest Ratings excl. Netflix' id='3'>
                      <capturedDeltas>
                        <worksheet name='Highest Ratings excl. Netflix'>
                          <filter class='categorical' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]'>
                            <groupfilter function='level-members' level='[none:Age_of_viewers:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                          </filter>
                          <filter class='quantitative' column='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' included-values='in-range'>
                            <min>2005</min>
                            <max>2020</max>
                          </filter>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='These are the series that are present both on Netflix and Prime. The lowest IMDb rating are &quot;Cocomong&quot; with 3.9 and &quot;Haunted&quot; with 4.6. The rest of the series have more than 6.1 on IMDb rating. Therefore we suggest to delete those 2 TV series. In general we concluded that Netflix has not done such a bad job for TV Series. ' captured-sheet='Lowest Ratings incl. Netflix' id='4' />
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='5000' hidden='true' id='9' story-point-id='10' w='18500' x='3700' y='15500'>
          <formatted-text>
            <run bold='true'>Language (overall)</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='4625' hidden='true' id='10' story-point-id='8' w='18800' x='3700' y='17250'>
          <formatted-text>
            <run bold='true'>Age of the viewers</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='5250' hidden='true' id='11' story-point-id='6' w='36200' x='4000' y='16625'>
          <formatted-text>
            <run bold='true'>Genre per age of the viewers (overall)</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='5000' hidden='true' id='12' story-point-id='11' w='22100' x='3800' y='15750'>
          <formatted-text>
            <run bold='true'>Language (last 5 years)</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='5000' hidden='true' id='13' story-point-id='12' w='13600' x='3800' y='15375'>
          <formatted-text>
            <run bold='true'>No. of seasons </run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='5000' hidden='true' id='14' story-point-id='1' w='57400' x='3600' y='15125'>
          <formatted-text>
            <run bold='true' fontalignment='0'>Highest IMDb rating of TV Series that are not in Netflix (overall)</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='5750' hidden='true' id='15' story-point-id='3' w='62000' x='3800' y='14625'>
          <formatted-text>
            <run bold='true'>Highest IMDb rating of TV Series that are not in Netflix (last 5 years)</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='5000' hidden='true' id='16' story-point-id='4' w='53100' x='3700' y='15375'>
          <formatted-text>
            <run bold='true'>Lowest IMDb rating TV Series that are in Netflix and Prime </run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='4500' hidden='true' id='17' story-point-id='7' w='39700' x='3600' y='16500'>
          <formatted-text>
            <run bold='true'>Genre per age of the viewers ( last 5 years)</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{298DB41A-FA35-4F0B-BA0C-8CA9EDDCD9EF}' />
    </dashboard>
    <dashboard name='Amazon Prime Video logo'>
      <style />
      <size maxheight='400' maxwidth='1000' minheight='400' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' forceUpdate='true' h='96000' id='1' param='C:/Users/marie/Downloads/Amazon_Prime_Video_logo.svg' w='98400' x='800' y='2000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='18' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='96000' id='17' param='vert' w='98400' x='800' y='2000'>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' fixed-size='280' forceUpdate='true' h='96000' id='1' is-fixed='true' param='C:/Users/marie/Downloads/Amazon_Prime_Video_logo.svg' w='98400' x='800' y='2000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{90820E02-BF5F-461C-A6AE-7BE99368AACE}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='dashboard' name='Amazon Prime Video logo'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{7B7C771B-F900-45DB-BBF1-B3DDA341E499}' />
    </window>
    <window class='worksheet' name='Highest Ratings excl. Netflix'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0msyu3s0jagk7r176j3p30pojhb6].[none:title:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:GenrePivot:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Language:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Name_of_the_show:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{15C52587-EE93-42A4-BB28-565ADCDBE3C8}' />
    </window>
    <window class='worksheet' name='Lowest Ratings incl. Netflix'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0msyu3s0jagk7r176j3p30pojhb6].[none:genre:nk]</field>
            <field>[federated.0msyu3s0jagk7r176j3p30pojhb6].[none:title:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:GenrePivot:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Name_of_the_show:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{108AA190-86CF-49A9-991A-18A9D77A1DDC}' />
    </window>
    <window class='worksheet' name='Age of the viewers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Name_of_the_show:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F976D4D9-92D5-4904-B4D7-2CEC05C56749}' />
    </window>
    <window class='worksheet' name='Genre'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[cnt:Genre:qk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E5BDFF9C-B99C-407C-9AFF-F01BF02730B8}' />
    </window>
    <window class='worksheet' name='Language'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[avg:IMDb_rating:qk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[cnt:Language:qk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Calculation_1795247462334107659:qk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Calculation_1795247462334160908:qk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Name_of_the_show:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F63DDA2A-7F71-4BE3-A5AF-85E7B7A809D4}' />
    </window>
    <window class='worksheet' name='No seasons'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Age_of_viewers:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Name_of_the_show:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:No_of_seasons:qk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[usr:Calculation_2595480820875956224:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E039B0A8-C63A-4CBE-9B93-F0DACD7D1B48}' />
    </window>
    <window class='worksheet' name='Netflix Rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0msyu3s0jagk7r176j3p30pojhb6].[none:type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0msyu3s0jagk7r176j3p30pojhb6].[none:rating:nk]</field>
            <field>[federated.0msyu3s0jagk7r176j3p30pojhb6].[none:title:nk]</field>
            <field>[federated.0msyu3s0jagk7r176j3p30pojhb6].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4EA63E76-6EB8-46EF-A6BA-14903CBD8F4B}' />
    </window>
    <window class='worksheet' name='Genre per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Name_of_the_show:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{30B1A2A1-1C89-4CE8-81A2-221A6B0B62C9}' />
    </window>
    <window class='worksheet' name='Language per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Language:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Genre:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Language:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Name_of_the_show:nk]</field>
            <field>[federated.1de3d2j0kgr9yr17aw71508jgatx].[none:Year_of_release:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C849D7CC-9EB7-476A-8FF7-EA09D3138A2C}' />
    </window>
    <window class='dashboard' maximized='true' name='Amazon Prime TV Shows'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{43F7AE8B-FA95-47F0-AB64-5E1F0B43B596}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Age of the viewers' width='192'>
      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
      f/0Jm/ysN8EwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Amazon Prime TV Shows' width='192'>
      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
      CBTN/weqJQ4AfrUnoQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Amazon Prime Video logo' width='192'>
      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
      m63tmIBwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Genre' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Genre per year' width='192'>
      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
      /wB6s32/Twg3pQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Highest Ratings excl. Netflix' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Language' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEmElEQVR4nO3a329TdRyH8XfXbmNsLWMosEBQdKBCxBD8QRQJCYmGcKV/pYkkahRvvDFG
      71QQ5VdFQTYYgzkHdrRl6+qFRgIZKZi1SJ7ndXe+ORefk/TJOd9zWmi32+1IUH2PewDpcTIA
      oRmA0AxAaKWVFquffJTrp37o9SxSz60YwMzJE/nl8+O9nkXqOR+BhGYAQuscQLGUgXIlA8Nr
      H3hKoVhKCvcv9qXQd/+i9P/SMYC1u/Zm4uChbN6zK8XiyueMvXYolbHBjE48f3dxw46M7xxb
      rTmlrlhxE3yvQvrLlQzcmU9534Fs3bY1S83ruXx6Ltv3v5g05nLt6nKSZGR8cwa3vJTR9X2Z
      PHUxmw4czejeZi5+eiz1WqvLlyI9uofYAzTy22cf58IXX2W52M6lYx/k5u/NVLaM5cKHx9JY
      vHtb6B8pp/nHzRSHyxksD2fm6+OZ/P7XFIceojPpMej4y2zNNzL+7tE8dWs6M1euZSlJffZG
      FpeH89x772fN2lZmzp5Pq9nKwvR0UhhJ63Yti/OzyWIzS+25tJvLPbgU6dF1DKA5Wc3Zyeo9
      a41qNWu2vpDW4lImv/wmtUszSZL6yb8/ns3f8w2ttmrDSqvtPz+bNKbOpzp1fjVnkXqu8x6g
      UMqmt9/Jtv17/nnTWUhl9xuZOHI4A2se8FpIekJ0DKD88pspXj+dqRPn0k6SwQ3Z+MxQpn66
      mk27d3R/QqmLOn8HWD+ayitvZeeRw+kfKCR3alksPp3tB/elfmO2FzNKXdNxD1CbvpLSrWZK
      G5/NwLpKsjyS/tZcrp2qZd2WzZm9bAR6cnW8AyxUT2ShWcqf575Nvd6fYmMmV3+8nMFSPVe+
      O9OLGaWueYi3QMuZP3Py36NGkiz8nNuTXZtJ6hn/DSo0AxCaAQjNAIRmAEIzAKEZgNAMQGgG
      IDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjN
      AIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwCh
      GYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYg
      NAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0A
      hGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZ
      gNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0
      AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCE
      ZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA
      0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiC00kqL46++ntLQUK9nkXruL9otvxxvkQlZ
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Language per year' width='192'>
      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
      obX/BxodVWmsOr2hAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Lowest Ratings incl. Netflix' width='192'>
      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
    </thumbnail>
    <thumbnail height='119' name='Netflix Rating' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='No seasons' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
